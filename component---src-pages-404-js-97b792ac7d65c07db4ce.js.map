{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","a","createElement","className","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","React","InternalPageRenderer","Object","assign","json","loader","enqueue","createContext","ListLink","props","react_default","gatsby_link_default","to","activeStyle","color","children","id","src","alt","layout_ListLink"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,GAAAI,EAAAJ,EAAAK,EAAAF,GAAAG,EAAAN,EAAA,KAGeE,EAAA,0BACXE,EAAAG,EAAAC,cAACF,EAAA,EAAD,KACIF,EAAAG,EAAAC,cAAA,OAAKC,UAAU,oBACfL,EAAAG,EAAAC,cAAA,4BACAJ,EAAAG,EAAAC,cAAA,2FCPR,IAAsBE,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,6ECsBhCK,UAjBU,SAAAC,GAAiC,IAA9BC,EAA8BD,EAA9BC,SAAUC,EAAoBF,EAApBE,cACpC,OAAKA,EAGEC,IAAMX,cAAcY,IAApBC,OAAAC,OAAA,CACLL,WACAC,iBACGA,EAAcK,OALV,yFCOcC,QAAOC,QAELN,IAAMO,cAAc,eCXzCC,EAAW,SAAAC,GAAK,OACpBC,EAAAtB,EAAAC,cAAA,UACEqB,EAAAtB,EAAAC,cAACsB,EAAAvB,EAAD,CAAMwB,GAAIH,EAAMG,GAAItB,UAAU,eAAeuB,YAAa,CAAEC,MAAO,SAAWL,EAAMM,YAIzEhC,EAAA,WAAAc,GAAA,IAAEkB,EAAFlB,EAAEkB,SAAF,OACbL,EAAAtB,EAAAC,cAAA,OAAK2B,GAAG,kBACNN,EAAAtB,EAAAC,cAAA,OAAK2B,GAAG,gBACJN,EAAAtB,EAAAC,cAAA,OAAKC,UAAU,SAAQoB,EAAAtB,EAAAC,cAAA,OAAK4B,IAAI,gCAAgCC,IAAI,UACpER,EAAAtB,EAAAC,cAAA,OAAKC,UAAU,0BACboB,EAAAtB,EAAAC,cAAA,eAAMqB,EAAAtB,EAAAC,cAAA,UACJqB,EAAAtB,EAAAC,cAAC8B,EAAD,CAAUP,GAAG,KAAb,QACAF,EAAAtB,EAAAC,cAAC8B,EAAD,CAAUP,GAAG,WAAb,SACAF,EAAAtB,EAAAC,cAAC8B,EAAD,CAAUP,GAAG,YAAb,UACAF,EAAAtB,EAAAC,cAAC8B,EAAD,CAAUP,GAAG,aAAb,YAJF,MAQJF,EAAAtB,EAAAC,cAAA,WAAM0B,IAEVL,EAAAtB,EAAAC,cAAA,UAAQ2B,GAAG,UAAX","file":"component---src-pages-404-js-97b792ac7d65c07db4ce.js","sourcesContent":["import React from \"react\"\r\nimport Layout from \"../components/layout\"\r\n\r\nexport default () => (\r\n    <Layout>\r\n        <div className=\"text-center py-4\">\r\n        <h2>Page not found</h2>\r\n        <h3>Whoops! It looks like this page doesn't exist... yet.</h3>\r\n        </div>\r\n    </Layout>\r\n)","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import React from \"react\"\r\n// import icon from \"./../icon.png\"\r\nimport { Link } from \"gatsby\"\r\nimport \"../styles/global.scss\"\r\n\r\nconst ListLink = props => (\r\n  <li>\r\n    <Link to={props.to} className=\"header-links\" activeStyle={{ color: '#333' }}>{props.children}</Link>\r\n  </li>\r\n)\r\n\r\nexport default ({children}) => (\r\n  <div id=\"page-container\">\r\n    <div id=\"content-wrap\">\r\n        <div className=\"title\"><img src=\"https://imgur.com/YzY5UEZ.png\" alt=\"Icon\"></img></div>\r\n        <div className=\"header-links-container\">\r\n          <nav> <ul>\r\n            <ListLink to=\"/\">HOME</ListLink>\r\n            <ListLink to=\"/about/\">ABOUT</ListLink>\r\n            <ListLink to=\"/webdev/\">WEBDEV</ListLink>\r\n            <ListLink to=\"/gamedev/\">GAMEDEV</ListLink>\r\n            {/* <ListLink to=\"/art/\">ART</ListLink> */}\r\n          </ul> </nav>\r\n        </div>\r\n      <div>{children}</div>\r\n    </div>\r\n  <footer id=\"footer\">Â© 2019 Tina Peng</footer>\r\n  </div>\r\n)"],"sourceRoot":""}